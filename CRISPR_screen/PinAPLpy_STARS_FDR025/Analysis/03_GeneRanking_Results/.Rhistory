#load required packages
library(RANN)
#required packages
#install.packages("RANN")
#install.packages("tidyverse")
#load required packages
library(RANN)
library(ggplot2)
#setwd("/Volumes/CIMM$/Trefny/Results/Exhaustion Model/03_HitValidation/200106_SynapsePolarizationQuantification_IF007-9/IF008/imaris_analysis")
setwd("/Volumes/CIMM$/Trefny/Results/Exhaustion Model/03_HitValidation/200106_SynapsePolarizationQuantification_IF007-9/IF009/imaris_analysis/")
if (!dir.exists("results/")){dir.create("results/")}
pdf("results/plots_xy.pdf")
zz <- file("results/text_results.txt", open = "wt")
sink(zz)
#Import all the data into a list of files
files <- list.files(pattern = ".csv")
imported <- list()
for(i in 1:length(files))
{
imported[[i]] <- read.csv(files[i], skip = 3)
}
names(imported) <- files
#retrieve the different experimental conditions (everything before the _C or _T.csv, _C is cancer, _T is T cells)
conditions <- unique(gsub("_T*.csv", "", grep("_T", files, value = TRUE))) # all T cell based spots
conditions.base <- unique(gsub("_CancerPosition.csv", "", grep("_CancerPosition", files, value = TRUE))) # all Cancer Comparisons
comparisons <- list()
for (i in 1:length(conditions.base)){
a <- gsub(conditions.base[[i]], "", grep("_T", grep(conditions.base[[i]], files, value = TRUE), value = TRUE)   )
a <- gsub("_T.csv","", a)
comparisons[[conditions.base[[i]]]] <- a
}
#This script creates a list with each of the comparisons, with position of the T cell feature of interest and the Cancer Position below in one data.frame
b = 1
imported.conditions <- list()
for (j in 1:length(comparisons)){
for(i in 1:length(comparisons[[j]])){
comparison = names(comparisons)[j]
condition = comparisons[[j]][i]
print(paste(comparison, "", condition))
imported.conditions[[b]] <- data.frame("type" = rep(paste0(comparison, condition ), nrow(imported[[paste0(comparison, condition, "_T.csv")]])),  imported[[paste0(comparison, condition, "_T.csv")]] )
imported.conditions[[b]] <- rbind(imported.conditions[[b]],  data.frame("type" = rep("Cancer", nrow(imported[[paste0(comparison, "_CancerPosition.csv")]])),  imported[[paste0(comparison, "_CancerPosition.csv")]] ))
b= b+1
}
}
names(imported.conditions) <- paste()
#plot the localization of the points for all conditions
for (j in 1:length(imported.conditions)){
p <- ggplot(data=imported.conditions[[j]], aes(x=Position.X, y=Position.Y, color = type)) + geom_point() + ggtitle(conditions[j])
print(p)
}
dev.off()
pdf("results/plots_histograms.pdf")
#now find distance of each T cell to its nearest tumor cell
distances <- data.frame()
for (j in 1:length(comparisons)){
for(i in 1:length(comparisons[[j]])){
comparison = names(comparisons)[j]
condition = comparisons[[j]][i]
#now find the closests tumor cell (data) for each T cell (query)
closest.Tcell <- data.frame(nn2(data = imported[[paste0(comparison,"_Cell_T.csv")]][,1:3], query = imported[[paste0(comparison, condition,"_T.csv")]][,1:3], k = 1))
closest.CancerCell <- data.frame(nn2(data = imported[[paste0(comparison,"_CancerPosition.csv")]][,1:3], query = imported[[paste0(comparison, condition,"_T.csv")]][,1:3], k = 1))
distance.Tcell.CancerCell <- data.frame(nn2(data = imported[[paste0(comparison,"_CancerPosition.csv")]][,1:3], query = imported[[paste0(comparison, "_Cell_T.csv")]][,1:3], k = 1))[closest.Tcell$nn.idx,]$nn.dist
polarization.ratio <- closest.CancerCell$nn.dists/distance.Tcell.CancerCell
print(summary(closest.CancerCell[,"nn.dists"]))
distances <- rbind(distances, data.frame(rep(paste0(comparison, condition), length(closest.CancerCell$nn.dists)), closest.CancerCell$nn.dists, closest.Tcell$nn.idx, distance.Tcell.CancerCell, polarization.ratio))
}
}
colnames(distances) <- c("condition", "distanceToCancerCell", "closestTcell", "distanceTcellCancerCell", "polarizationRatio")
write.table(distances, paste0("results/distances.txt"), sep ="\t", quote=FALSE, row.names = FALSE)
#Define a function that allows pairwise comparisons of each feature from a given sample to another
compareDistances <- function(distances, comparisons, sample1, sample2 ){
print(paste(sample1, sample2))
for (i in 1:length(comparisons[[sample1]])){
comparison <- comparisons[[sample1]][i] #perform one comparison at a time, e.g Cell to cell distance
testing <- (distances$condition == paste0(sample1, comparison )) | (distances$condition == paste0(sample2, comparison )) #make a subset of the distance input only for those which are necessary
distances.subset <- distances[testing ,]
if(var(distances.subset$polarizationRatio) == 0){ #only for Cell to Cell Distance plot everything these have ratio of 1:
#test for differential distance between the two conditions
t <- t.test(distanceToCancerCell ~ condition, data=distances.subset)
w <- wilcox.test(distanceToCancerCell ~ condition, data=distances.subset)
print(paste("distance to Cancer Cell t-test", sprintf("%0.6g", t$p.value)))
print( paste( "distance to Cancer Cell Wilcox-test", sprintf("%0.6g", w$p.value)))
#now plot the distance between these nearest neighbors in a ggplot2 histogram
p <- ggplot(data=distances.subset, aes(x=distanceToCancerCell, stat(density), color = condition)) + ggtitle(substring(comparison,2, nchar(comparison) )) +
geom_freqpoly() + labs(x=paste0("Distance to Nearest Cancer Cell \n t-test: ", sprintf("%0.3g", t$p.value), "\n wilcox: ", sprintf("%0.3g", w$p.value)  )) + geom_vline(xintercept = 25)
print(p)
}else{ #for all other features, first get rid of events with a distance greater than 25um
distances.subset <- distances.subset[distances.subset$distanceTcellCancerCell < 25,] #exclude cells with a distance of >25um from the feature analysis
#test for differential distance between the two conditions
t <- t.test(distanceToCancerCell ~ condition, data=distances.subset)
w <- wilcox.test(distanceToCancerCell ~ condition, data=distances.subset)
print(paste("distance to Cancer Cell t-test", sprintf("%0.6g", t$p.value)))
print( paste( "distance to Cancer Cell Wilcox-test", sprintf("%0.6g", w$p.value)))
#now plot the distance between these nearest neighbors in a ggplot2 histogram
p <- ggplot(data=distances.subset, aes(x=distanceToCancerCell, stat(density), color = condition)) + ggtitle(paste(substring(comparison,2, nchar(comparison) )), "\n cells <25 µm apart") +
geom_freqpoly() + labs(x=paste0("Distance to Nearest Cancer Cell \n t-test: ", sprintf("%0.3g", t$p.value), "\n wilcox: ", sprintf("%0.3g", w$p.value)  ))
print(p)
t <- t.test(polarizationRatio ~ condition, data=distances.subset)
w <- wilcox.test(polarizationRatio ~ condition, data=distances.subset)
print(paste("Polarization Ratio", sprintf("%0.6g", t$p.value)))
print(paste("Polarization Ratio", sprintf("%0.6g", w$p.value)))
#now plot the distance between these nearest neighbors in a ggplot2 histogram
p <- ggplot(data=distances.subset, aes(x=polarizationRatio, stat(density), color = condition)) + ggtitle(paste("Polarization" ,substring(comparison,2, nchar(comparison) ),  "\n cells <25 µm apart")) +
geom_freqpoly() + labs(x=paste0("Polarization\n Distance Feature-Cancer / Distance TCell-Cancer\n t-test: ", sprintf("%0.3g", t$p.value), "\n wilcox: ", sprintf("%0.3g", w$p.value)  ))
print(p)
}
}
}
#retrieve which two samples should be compared (each row contains two samples, which should be compared)
sample.annotation <- read.csv("results/sample_annotation.csv", header = FALSE)
for (i in 1:nrow(sample.annotation)){
compareDistances(distances, comparisons, as.character(sample.annotation$V1[i]), as.character(sample.annotation$V2[i]))
}
dev.off()
sink()
knitr::opts_chunk$set(echo = TRUE)
require("knitr")
opts_knit$set(root.dir = '/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined/Analysis/')
library(edgeR)
library(RColorBrewer)
library(viridis)
library(reshape2)
myPalette <- c(brewer.pal(9, "Set1"), brewer.pal(8, "Set2"))
library(ComplexHeatmap)
library(stringr)
library(circlize)
library(ggplot2)
library(ggrepel)
library(GGally)
list.files()
STARS_FDR <- read.csv(paste0(path, "/Analysis/03_GeneRanking_Results/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined_STARS_FDR025"
STARS_FDR <- read.csv(paste0(path, "/Analysis/03_GeneRanking_Results/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
paste0(path, "/Analysis/03_GeneRanking_Results/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt")
setwd("/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/")
ls
list.files()
STARS_FDR <- read.csv(paste0(path, "/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
paste0(path, "Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"),
paste0(path, "Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt")
setwd(/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/"")
setwd(/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/")
setwd("/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined_STARS_FDR025_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/")
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment
STARS_FDR.depletion <- cbind(STARS_FDR.enrichment, "index" = seq(1, nrow(STARS_FDR.enrichment), 1))
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "index" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "index" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS))
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) + geom_dotplot()
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) + geom_dotplot(aes(y= STARS))
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis='x', stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)
STARS_FDR.depletion
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(aes(y= STARS) stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(data = STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(aes(y= STARS),stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(aes(y= STARS),stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) + geom_bar()
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis = "y",stackdir='center', stackratio=1.5, dotsize=1.2)
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis = "y",stackdir='center', stackratio=1.5,binwidth = "1", dotsize=1.2)
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis = "y",stackdir='center', stackratio=1.5,binwidth = 1, dotsize=1.2)
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_dotplot(binaxis = "y",stackdir='center', stackratio=1.5,binwidth = 1,)
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS)) +  geom_point()
STARS_FDR.enrichment
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS, label = gene)) +  geom_point() + geom_text_repel()
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS, label = ifelse(STARS > 0, gene , "")) +  geom_point() + geom_text_repel()
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS, label = ifelse(STARS > 0, gene , ""))) +  geom_point() + geom_text_repel()
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS, label = ifelse(STARS > 0, gene , ""))) +  geom_point() + geom_text_repel()
ggplot(STARS_FDR.enrichment, aes(x = index, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel()
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
cbind(STARS_FDR.enrichment$STARS, STARS_FDR.depletion$STARS)
STARS_both <- cbind("STARS_Enrichment" = STARS_FDR.enrichment$STARS,"STARS_Depletion"= STARS_FDR.depletion$STARS)
melt(STARS_both)
STARS_both <- melt(STARS_both)
STARS_both
STARS_both <- cbind("STARS_Enrichment" = STARS_FDR.enrichment$STARS,"STARS_Depletion"= STARS_FDR.depletion$STARS)
ggplot(STARS_both, aes(x = STARS_Enrichment, y=STARS_Depletion, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
STARS_both <- merge(STARS_FDR.enrichment$STARS, STARS_FDR.depletion$STARS,by = "gene" )
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" )
STARS_both
?merge
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
?merge
STARS_both
STARS_FDR.enrichment
STARS_both
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 0) | (STARSDepletion > 0), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 0) | (STARSDepletion > 0), as.character(gene) , ""))) +  geom_jitter() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 0) | (STARSDepletion > 0), as.character(gene) , ""))) +  geom_jitter(width = 0.5) + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 0) | (STARSDepletion > 0), as.character(gene) , ""))) +  geom_jitter(width = 0.1) + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 0) | (STARSDepletion > 0), as.character(gene) , ""))) +  geom_jitter(width = 0.05) + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 1), as.character(gene) , ""))) +  geom_jitter(width = 0.05) + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_jitter(width = 0.05) + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_jitter(width = 0.05) + geom_text_repel()+ ggtitle("STARS Top25% Depletion") + theme_light()
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme(plot.title = element_text(hjust=0.5, size = 16), axis.title = element_text(size = 18), axis.text = element_text(size = 14), legend.key.size = unit(1.1, "cm"),legend.text = element_text(size = 14), legend.title = element_text(size = 16), panel.background = element_rect(fill = "white", colour = "black",  size = 1/2, linetype = "solid"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_point()) + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme(plot.title = element_text(hjust=0.5, size = 16), axis.title = element_text(size = 16), axis.text = element_text(size = 14), legend.key.size = unit(1.1, "cm"),legend.text = element_text(size = 14), legend.title = element_text(size = 16), panel.background = element_rect(fill = "white", colour = "black",  size = 1/2, linetype = "solid"))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") +
theme_marcel <- theme(plot.title = element_text(hjust=0.5, size = 16), axis.title = element_text(size = 16), axis.text = element_text(size = 14), legend.key.size = unit(1.1, "cm"),legend.text = element_text(size = 14), legend.title = element_text(size = 16), panel.background = element_rect(fill = "white", colour = "black",  size = 1/2, linetype = "solid"))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") +
theme_marcel <- theme(plot.title = element_text(hjust=0.5, size = 16), axis.title = element_text(size = 16), axis.text = element_text(size = 14), legend.key.size = unit(1.1, "cm"),legend.text = element_text(size = 14), legend.title = element_text(size = 16), panel.background = element_rect(fill = "white", colour = "black",  size = 1/2, linetype = "solid"))
theme_marcel <- theme(plot.title = element_text(hjust=0.5, size = 16), axis.title = element_text(size = 16), axis.text = element_text(size = 14), legend.key.size = unit(1.1, "cm"),legend.text = element_text(size = 14), legend.title = element_text(size = 16), panel.background = element_rect(fill = "white", colour = "black",  size = 1/2, linetype = "solid"))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel
knitr::opts_chunk$set(echo = TRUE)
require("knitr")
opts_knit$set(root.dir = '/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/Exp032_allcombined/Analysis/')
library(edgeR)
library(RColorBrewer)
library(viridis)
library(reshape2)
myPalette <- c(brewer.pal(9, "Set1"), brewer.pal(8, "Set2"))
library(ComplexHeatmap)
library(stringr)
library(circlize)
library(ggplot2)
library(ggrepel)
library(GGally)
theme_marcel <- theme(plot.title = element_text(hjust=0.5, size = 16), axis.title = element_text(size = 16), axis.text = element_text(size = 14), legend.key.size = unit(1.1, "cm"),legend.text = element_text(size = 14), legend.title = element_text(size = 16), panel.background = element_rect(fill = "white", colour = "black",  size = 1/2, linetype = "solid"))
list.files()
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 0, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1)
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel + geom_hline(yintercept = 1)
?geom_hline
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
pdf(paste0("../../../plots/STARS_PinAPLpy_plots.pdf"), width = 10)
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion") + theme_marcel
dev.off()
```{r STARS with 0.25FDR}
pdf(paste0("../../../plots/STARS_PinAPLpy_plots.pdf"), width = 10)
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Enrichment vs Depletion ") + theme_marcel
dev.off()
pdf(paste0("../../../plots/STARS_PinAPLpy_plots.pdf"), width = 10)
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 0.5), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Enrichment vs Depletion ") + theme_marcel
dev.off()
pdf(paste0("../../../plots/STARS_PinAPLpy_plots.pdf"), width = 10)
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 1), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Enrichment vs Depletion ") + theme_marcel
dev.off()
pdf(paste0("../../../plots/STARS_PinAPLpy_plots.pdf"), width = 10)
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + labs(y="STARS score") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ labs(y="STARS score") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 1), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ labs(y="STARS score") + ggtitle("STARS Top25% Enrichment vs Depletion ") + theme_marcel
dev.off()
pdf(paste0("../../../plots/STARS_PinAPLpy_plots.pdf"), width = 10)
path = "/Volumes/CIMM$/Trefny/NGS/exhaustion_model/CRISPRScreens/Exp032_CRISPRScreen2_sequencing/PinAPL-py/"
STARS_FDR.enrichment <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR025/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.depletion <- read.csv(paste0(path, "Exp032_allcombined_STARS_FDR25_depletion/Analysis/03_GeneRanking_Results/Gene_Rankings/CD107a_positive_avg_0.25_Sidak_STARS_GeneList.txt"), header = TRUE,sep="\t")
STARS_FDR.enrichment <- cbind(STARS_FDR.enrichment, "rank" = seq(1, nrow(STARS_FDR.enrichment), 1))
STARS_FDR.depletion <- cbind(STARS_FDR.depletion, "rank" = seq(1, nrow(STARS_FDR.depletion), 1))
ggplot(STARS_FDR.enrichment, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment") + labs(y="STARS score") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.depletion, aes(x = rank, y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ ggtitle("STARS Top25% Depletion")+ labs(y="STARS score") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
STARS_both <- merge(STARS_FDR.enrichment, STARS_FDR.depletion,by = "gene" , suffixes = c("Enrichment", "Depletion"))
ggplot(STARS_both, aes(x = STARSEnrichment, y=STARSDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 1), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ labs(y="STARS depletion score", x = "STARS enrichment score") + ggtitle("STARS Top25% Enrichment vs Depletion ") + theme_marcel
dev.off()
STARS_both
ggplot(STARS_both, aes(x = rankEnrichment, y=rankDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 1), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ labs(y="STARS depletion rank", x = "STARS enrichment rank") + ggtitle("STARS Top25% Enrichment vs Depletion Ranks ") + theme_marcel
dev.off()
ggplot(STARS_both, aes(x = rankEnrichment, y=rankDepletion, label = ifelse((STARSEnrichment > 1) | (STARSDepletion > 1), as.character(gene) , ""))) +  geom_point() + geom_text_repel()+ labs(y="STARS depletion rank", x = "STARS enrichment rank") + ggtitle("STARS Top25% Enrichment vs Depletion Ranks ") + theme_marcel
STARS_FDR.enrichment
ggplot(STARS_FDR.enrichment, aes(x = -log10(ifelse(is.na(p_value), 0, p_value)), y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment Volcano") + labs(y="STARS score") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
ggplot(STARS_FDR.enrichment, aes(x = (ifelse(is.na(p_value), 0, p_value)), y=STARS, label = ifelse(STARS > 1, as.character(gene) , ""))) +  geom_point() + geom_text_repel() + ggtitle("STARS Top25% Enrichment Volcano") + labs(y="STARS score") + theme_marcel + geom_hline(yintercept = 1, linetype="dotted")
